<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recruiting on Simon says</title>
    <link>http://simonmika.com/tags/recruiting/</link>
    <description>Recent content in Recruiting on Simon says</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 Sep 2016 23:18:43 +0200</lastBuildDate>
    <atom:link href="http://simonmika.com/tags/recruiting/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Recruiting Process</title>
      <link>http://simonmika.com/article/recruiting-process/</link>
      <pubDate>Tue, 27 Sep 2016 23:18:43 +0200</pubDate>
      
      <guid>http://simonmika.com/article/recruiting-process/</guid>
      <description>&lt;p&gt;Good programmers are more like artists then sweatshop workers. If we are serious about recruiting good programmers we should not treat them like sweatshop workers.&lt;/p&gt;

&lt;p&gt;An employment is somewhat like a marriage. The relationship starts by finding a partner on a dating/job listing site or thru the referral of a trusted friend. After that you start dating/interviewing. After a period of dating/interviewing you end up writing a marriage/employment contract.&lt;/p&gt;

&lt;p&gt;One of the keys to a successful dating/interviewing is for it to be reciprocal. You tell me something about you and I tell you something about me. We both spend time together.&lt;/p&gt;

&lt;p&gt;Some, mostly bigger, companies forget the reciprocal part. For them it is all about efficient selection. Like they are buyers on some kind of slave market. Send us your resume. Fill out this form. Do this task. They forget about courting the future employee and inspiring them to join.&lt;/p&gt;

&lt;p&gt;On every step in our recruiting process we should not only think about what new information we will get about the candidate but we should also think hard about what the candidate will learn about us. If we don&amp;rsquo;t we will likely end up loosing the best, most qualified and most attractive candidates. It is after all an employees market.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rock Star Programmers</title>
      <link>http://simonmika.com/article/rock-star-programmers/</link>
      <pubDate>Tue, 27 Sep 2016 23:18:43 +0200</pubDate>
      
      <guid>http://simonmika.com/article/rock-star-programmers/</guid>
      <description>&lt;p&gt;Sometimes I come across programmers that view themselves as rock stars. Some even label themselves code ninjas. As if they are some kind of programming super hero with special powers.&lt;/p&gt;

&lt;p&gt;While a do realize where this comes from. A good programmer can easily be more then ten times as productive as an average one. We do also need good raw models and front figures for our profession.&lt;/p&gt;

&lt;p&gt;But programming is almost never a one man show. Most real world projects are impossible to finish yourself within a reasonable time. They are team efforts. Therefore a real programming hero is a someone who not only is a very productive expert but who also helps the rest of the team to reach their full potential by mentoring and encouraging them.&lt;/p&gt;

&lt;p&gt;The rock star attitude is the opposite of the humble and encouraging attitude a good mentor. So let us stop talking about code ninjas as a good thing and instead let us celebrate the mentors.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>